name: Build and Push Helm Charts
on:
  push:
    branches:
      - main
      - dev

jobs: 
  changed-files:
    name: Check changed files
    runs-on: ubuntu-latest
    outputs:
      changed_files: ${{ steps.changed-files.outputs.all_changed_files }}
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@ed68ef82c095e0d48ec87eccea555d944a631a4c

  helm-matrix:
    name: Check Helm Charts
    runs-on: ubuntu-latest
    needs: changed-files
    env: 
      changed_files: ${{ needs.changed-files.outputs.changed_files }}
    outputs:
      charts: ${{ steps.get-changed-charts.outputs.charts }}
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Get Changed Helm Charts
        id: get-changed-charts
        run: |
          changed_charts=$(echo ${changed_files} | tr ' ' '\n' | awk -F'/' '/^helm\// {print $2}' | sort -u)
          echo "charts=$(echo ${changed_charts} | tr -d '\n' | jq -Rsc 'split(" ")')" >> $GITHUB_OUTPUT

      - name: Debug Matrix
        run: |
          echo "Matrix: ${{ steps.get-changed-charts.outputs.charts }}"

  build-and-push-helm:
    name: Helm Charts
    runs-on: ubuntu-latest
    needs: helm-matrix
    strategy:
      matrix: 
        chart: ${{fromJson(needs.helm-matrix.outputs.charts)}}
    if: needs.helm-matrix.outputs.charts != '[]'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Login to GitHub Container Registry
        run: |
          helm registry login ghcr.io --username ${{ github.actor }} --password ${{ secrets.GITHUB_TOKEN }}

      - name: Package Helm Chart
        id: package-chart
        run: |
          if [ "$(helm show chart helm/${{ matrix.chart }} | yq '.name')" != "${{ matrix.chart }}" ]; then
            echo "Chart name mismatch: expected ${{ matrix.chart }}, got $(helm show chart helm/${{ matrix.chart }} | yq '.name')"
            exit 1
          fi

          helm package helm/${{ matrix.chart }} --destination ./tmp/
          
          if [ "${{ github.ref_name }}" == "main" ]; then
            index_file="docs/charts/stable/index.yaml"
          else
            index_file="docs/charts/dev/index.yaml"
          fi
          chart_version=$(helm show chart helm/${{ matrix.chart }} | yq '.version')

          echo "index_file=${index_file}" >> $GITHUB_OUTPUT
          echo "chart_version=${chart_version}" >> $GITHUB_OUTPUT
          echo "chart_appVersion=$(helm show chart helm/${{ matrix.chart }} | yq '.appVersion')" >> $GITHUB_OUTPUT
          echo "chart_description=$(helm show chart helm/${{ matrix.chart }} | yq '.description')" >> $GITHUB_OUTPUT
          echo "chart_url=oci://ghcr.io/${{ github.repository }}/helm/${{ matrix.chart }}/${chart_version}" >> $GITHUB_OUTPUT
          echo "chart_digest=$(sha256sum "./tmp/${chart_name}-${chart_version}.tgz" | awk '{print $1}')" >> $GITHUB_OUTPUT

      - name: Push Helm Chart to GitHub Container Registry
        run: |
          helm push ./tmp/${{ matrix.chart }}-${{ steps.package-chart.outputs.chart_version }}.tgz oci://ghcr.io/${{ github.repository }}/helm/

      - name: Checkout code
        uses: actions/checkout@v3
        with: 
          ref: main

      - name: Update Index YAML
        id: update-index
        run: |
          # Prepare new entry
          new_entry="{
            \"apiVersion\": \"v2\",
            \"name\": \"${{ matrix.chart }}\",
            \"version\": \"${{ steps.package-chart.outputs.chart_version }}\",
            \"appVersion\": \"${{ steps.package-chart.outputs.chart_appVersion }}\",
            \"description\": \"${{ steps.package-chart.outputs.chart_description }}\",
            \"digest\": \"${{ steps.package-chart.outputs.chart_digest }}\",
            \"urls\": [
              \"${{ steps.package-chart.outputs.chart_url }}\"
            ]
          }"

          # Append or create .entries.${chart_name}
          if yq e ".entries.${{ matrix.chart }}" "${{ steps.package-chart.outputs.index_file }}" > /dev/null; then
            # Append to existing list
            yq -i ".entries.${{ matrix.chart }} += [${new_entry}]" "${{ steps.package-chart.outputs.index_file }}"
          else
            # Create new list with the entry
            yq -i ".entries.${{ matrix.chart }} = [${new_entry}]" "${{ steps.package-chart.outputs.index_file }}"
          fi

      - name: Commit and Push Index YAML
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "GitHub Action"
          git add ${{ steps.package-chart.outputs.index_file }}
          git commit -m "Update ${{ steps.package-chart.outputs.index_file }}: ${{ matrix.chart }} - ${{ steps.package-chart.outputs.chart_version }}"
          git push origin main
